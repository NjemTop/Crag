version: '3.9'

services:
  web:
    build: .
    command: bash -c "python3.9 manage.py makemigrations && python3.9 manage.py migrate && python3.9 manage.py runserver 0.0.0.0:8137"
    volumes:
      - .:/app
      - mediadata:/app/media
      - logdata:/app/logs
    ports:
      - "8137:8137"
    container_name: Crag
    environment:
      - TZ=Europe/Moscow
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    restart: always
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:13
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_DB=database_1.db
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=kJGnTXBT
    container_name: DataBase
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: RabbitMQ
    environment:
      - TZ=Europe/Moscow
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=BfDVBPsNSf
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: celery -A crag worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    container_name: Celery
    environment:
      - TZ=Europe/Moscow
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    restart: always

  celerybeat:
    build: .
    command: celery -A crag beat -l info
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    container_name: Celery_Beat
    environment:
      - TZ=Europe/Moscow
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    restart: always
  elasticsearch:
    image: elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: always

  kibana:
    image: kibana:7.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: always

  logstash:
    image: logstash:7.12.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./logstash.conf:/etc/logstash/conf.d/logstash.conf
    ports:
      - "5001:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    restart: always

volumes:
  dbdata:
  mediadata:
  logdata:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/logs
      o: bind
  esdata:
    driver: local
